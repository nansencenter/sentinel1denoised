import matplotlibmatplotlib.use('agg')import matplotlib.pyplot as pltfrom s1denoise.S1_TOPS_GRD_NoiseCorrection import Sentinel1Imageimport numpy as npimport osimport sysimport globffiles = glob.glob('%s/*.zip' % sys.argv[1])polarization = sys.argv[2]base_dir = os.path.dirname(ffiles[0])out_dir_path = '%s/visual_comp' % base_dirnpz_dir_path = '%s/npz' % base_dirtry:    os.makedirs(out_dir_path)except:    passtry:    os.makedirs(npz_dir_path)except:    pass# Dictonary for ESA and NERSC QAM resultsd_res_esa =  {}d_res_nersc = {}for fname in ffiles:    id_name = os.path.basename(fname).split('.')[0]    d_res_esa[id_name] = {}    d_res_nersc[id_name] = {}# Open first file to get keys of results1 = Sentinel1Image(ffiles[0])res_qam = s1.qualityAssesment(polarization)keys = list(res_qam['QAM_ESA'].keys())for id_key in list(d_res_esa.keys()):    for k in keys:        d_res_esa[id_key][k] = []        d_res_nersc[id_key][k] = []for fname in ffiles:    id_name = os.path.basename(fname).split('.')[0]    s1 = Sentinel1Image(fname)    res_qam = s1.qualityAssesment(polarization)    keys = list(res_qam['QAM_ESA'].keys())    for k in keys:        d_res_esa[id_name][k].append(res_qam['QAM_ESA'][k])        d_res_nersc[id_name][k].append(res_qam['QAM_NERSC'][k])np.savez('%s/ESA_QAM.npz' % npz_dir_path, **d_res_esa)np.savez('%s/NERSC_QAM.npz' % npz_dir_path, **d_res_nersc)